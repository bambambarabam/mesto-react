{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","api","options","this","baseUrl","headers","res","ok","json","Promise","reject","status","fetch","method","then","_response","userName","userJob","body","JSON","stringify","name","about","cardName","cardLink","link","id","userAvatar","avatar","authorization","Card","props","card","onClick","onCardClick","aria-label","type","likes","length","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","setUserName","userDescription","setUserDescription","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","values","user","initialCards","map","item","key","_id","Footer","PopupWithForm","title","button","children","isOpen","onClose","noValidate","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","defaultValue","placeholder","minLength","maxLength","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.24d6987d.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img\n        src={logo}\n        className=\"header__logo\"\n        alt=\"Логотип.\"\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _response(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`error${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this.headers\n    })\n      .then(this._response)\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this.headers\n    })\n      .then(this._response)\n  }\n\n  editUserInfo(userName, userJob) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: userName,\n        about: userJob\n      }),\n    })\n      .then(this._response)\n  }\n\n  addNewCard(cardName, cardLink) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: cardName,\n        link: cardLink\n      }),\n    })\n      .then(this._response)\n  }\n\n  removeCard(id) {\n    return fetch(`${this.baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    })\n      .then(this._response)\n  }\n\n  addLike(id) {\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this.headers\n    })\n      .then(this._response)\n  }\n\n  delLike(id) {\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    })\n      .then(this._response)\n  }\n\n  editAvatar(userAvatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: userAvatar\n      })\n    })\n      .then(this._response)\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\n  headers: {\n    authorization: 'b39e5495-8618-4848-8d04-1de0d78a2b88',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;","import React from 'react';\n\nfunction Card(props) {\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n  return (\n    <div className=\"element\">\n      <img\n        className=\"element__img element__img_add element__img_preview\"\n        src={props.card.link}\n        alt={`${props.card.name}`}\n        onClick={handleClick} />\n      <button\n        className=\"element__del\"\n        aria-label=\"Удалить\"\n        type=\"button\" />\n      <h2 className=\"element__header element__header_add\">{props.card.name}</h2>\n      <div className=\"element__fav-container\">\n        <button\n          className=\"element__fav\"\n          aria-label=\"В избранное\"\n          type=\"button\"\n        />\n        <p className=\"element__fav-count\">{props.card.likes.length}</p>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Card;\n","import React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\n  const [userName, setUserName] = React.useState();\n  const [userDescription, setUserDescription] = React.useState();\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCards()\n    ])\n      .then((values) => {\n        const [user, initialCards] = values;\n        setUserName(user.name);\n        setUserDescription(user.about);\n        setUserAvatar(user.avatar);\n        setCards(initialCards);\n      })\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-container\">\n          <img\n            className=\"profile__avatar\"\n            src={userAvatar}\n            alt=\"Аватар.\" />\n          <div\n            className=\"profile__avatar-edit\"\n            onClick={onEditAvatar} />\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__name\">\n            <h1 className=\"profile__title\">{userName}</h1>\n            <button\n              className=\"profile__edit\"\n              onClick={onEditProfile}\n              aria-label=\"Редактировать\"\n              type=\"button\"\n            />\n          </div>\n          <p className=\"profile__subtitle\">{userDescription}</p>\n        </div>\n        <button\n          className=\"profile__button\"\n          onClick={onAddPlace}\n          aria-label=\"Добавить\"\n          type=\"button\">+</button>\n      </section>\n\n      <section className=\"elements\">\n        {cards.map((item) => (\n          <Card\n            key={item._id}\n            card={item}\n            onCardClick={onCardClick}\n          />\n        ))}\n      </section>\n    </main>\n  )\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm({name, title, button, children, isOpen, onClose}) {\n  return (\n    <section className={`popup popup_${name} ${isOpen && \"popup_opened\"}`}>\n      <form className={`popup__form popup__form_${name}`} name={name} noValidate>\n        <button className=\"popup__close\" type=\"button\" onClick={onClose} />\n        <h2 className=\"popup__name\">{title}</h2>\n        {children}\n        <button className={`popup__button popup__button_${name}`} type=\"submit\">{button}</button>\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup({ isOpen, onClose, card }) {\n  return (\n    <section className={`popup popup_preview ${isOpen && \"popup_opened\"}`}>\n      <figure className=\"popup__figure\">\n        <button\n          className=\"popup__close popup__close_preview\"\n          aria-label=\"Закрыть\"\n          type=\"button\"\n          onClick={onClose}\n        />\n        <img className=\"popup__image\"\n          src={card.link}\n          alt={`${card.name}`}\n        />\n        <figcaption className=\"popup__subtitle\">{card.name}</figcaption>\n      </figure>\n    </section>\n  )\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(true);\n    setIsImagePopupOpen(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n      <Footer />\n\n      <PopupWithForm\n        title=\"Редактировать профиль\"\n        name=\"profile\"\n        button=\"Сохранить\"\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}>\n        <input\n          type=\"text\"\n          defaultValue=\"\"\n          placeholder=\"Ваше имя\"\n          className=\"popup__input\"\n          name=\"name\"\n          minLength=\"2\"\n          maxLength=\"40\" id=\"name\"\n          required\n        />\n        <span\n          className=\"popup__error\"\n          id=\"name-error\"\n        />\n\n        <input\n          type=\"text\"\n          defaultValue=\"\"\n          placeholder=\"Ваше занятие\"\n          className=\"popup__input\"\n          name=\"job\"\n          required\n          minLength=\"2\"\n          maxLength=\"200\"\n          id=\"job\"\n        />\n        <span\n          className=\"popup__error\"\n          id=\"job-error\"\n        />\n      </PopupWithForm>\n\n      <PopupWithForm\n        title=\"Новое место\"\n        name=\"add\"\n        button=\"Создать\"\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}>\n        <input\n          type=\"text\"\n          defaultValue=\"\"\n          placeholder=\"Название\"\n          className=\"popup__input\"\n          name=\"placename\"\n          minLength=\"1\"\n          maxLength=\"30\"\n          id=\"placename\"\n          required\n        />\n        <span\n          className=\"popup__error\"\n          id=\"placename-error\" /\n        >\n\n        <input\n          type=\"url\"\n          defaultValue=\"\"\n          placeholder=\"Ссылка на картинку\"\n          className=\"popup__input\"\n          name=\"link\"\n          id=\"link\"\n          required\n        />\n        <span\n          className=\"popup__error\"\n          id=\"link-error\"\n        />\n      </PopupWithForm>\n\n      <PopupWithForm\n        title=\"Обновить аватар\"\n        name=\"avatar\"\n        button=\"Создать\"\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}>\n        <input\n          type=\"url\"\n          className=\"popup__input\"\n          defaultValue=\"\"\n          placeholder=\"Ссылка на картинку\"\n          name=\"link\"\n          id=\"link\"\n          required\n        />\n        <span\n          className=\"popup__error\"\n          id=\"link-error\"\n        />\n      </PopupWithForm>\n\n      <PopupWithForm\n        title=\"Вы уверены?\"\n        name=\"confirm\"\n        button=\"Да\"\n        onClose={closeAllPopups}\n      />\n\n      <ImagePopup\n        isOpen={selectedCard}\n        card={isImagePopupOpen}\n        onClose={closeAllPopups}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}