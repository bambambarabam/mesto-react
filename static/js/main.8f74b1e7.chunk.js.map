{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","api","options","this","baseUrl","headers","res","ok","json","Promise","reject","status","fetch","method","then","_response","userName","userJob","body","JSON","stringify","name","about","cardName","cardLink","link","id","userAvatar","avatar","authorization","Card","props","card","onClick","onCardClick","aria-label","type","class","likes","length","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","setUserName","userDescription","setUserDescription","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","values","user","initialCards","catch","err","console","log","map","item","key","_id","Footer","PopupWithForm","isOpen","noValidate","onClose","title","children","button","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","value","placeholder","minlength","maxlength","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.8f74b1e7.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n    return(\n    <header className=\"header\">\n        <img src={logo} className=\"header__logo\" alt=\"Логотип.\" />\n    </header>\n    );\n}\n\nexport default Header;","class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _response(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`error${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this.headers\n    })\n      .then(this._response)\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this.headers\n    })\n      .then(this._response)\n  }\n\n  editUserInfo(userName, userJob) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: userName,\n        about: userJob\n      }),\n    })\n      .then(this._response)\n  }\n\n  addNewCard(cardName, cardLink) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: cardName,\n        link: cardLink\n      }),\n    })\n      .then(this._response)\n  }\n\n  removeCard(id) {\n    return fetch(`${this.baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    })\n      .then(this._response)\n  }\n\n  addLike(id) {\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this.headers\n    })\n      .then(this._response)\n  }\n\n  delLike(id) {\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    })\n      .then(this._response)\n  }\n\n  editAvatar(userAvatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: userAvatar\n      })\n    })\n      .then(this._response)\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\n  headers: {\n    authorization: 'b39e5495-8618-4848-8d04-1de0d78a2b88',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;","import React from 'react';\n\nfunction Card(props) {\n    function handleClick() {\n        props.onCardClick(props.card);\n    }\n    return (\n        <div className=\"element\">\n            <img className=\"element__img element__img_add element__img_preview\" src={props.card.link} alt={`${props.card.name}`} onClick={handleClick} />\n            <button className=\"element__del\" aria-label=\"Удалить\" type=\"button\"></button>\n            <h2 className=\"element__header element__header_add\">{props.card.name}</h2>\n            <div className=\"element__fav-container\">\n                <button className=\"element__fav\" aria-label=\"В избранное\" type=\"button\" />\n                <p class=\"element__fav-count\">{props.card.likes.length}</p>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Card;","import React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\n    const [userName, setUserName] = React.useState();\n    const [userDescription, setUserDescription] = React.useState();\n    const [userAvatar, setUserAvatar] = React.useState();\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        Promise.all([\n            api.getUserInfo(),\n            api.getInitialCards()\n        ])\n            .then((values) => {\n                const [user, initialCards] = values;\n                setUserName(user.name);\n                setUserDescription(user.about);\n                setUserAvatar(user.avatar);\n                setCards(initialCards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__avatar-container\">\n                    <img className=\"profile__avatar\" src={userAvatar} alt=\"Аватар.\" />\n                    <div className=\"profile__avatar-edit\" onClick={onEditAvatar}></div>\n                </div>\n                <div className=\"profile__info\">\n                    <div className=\"profile__name\">\n                        <h1 className=\"profile__title\">{userName}</h1>\n                        <button className=\"profile__edit\" onClick={onEditProfile} aria-label=\"Редактировать\" type=\"button\"></button>\n                    </div>\n                    <p className=\"profile__subtitle\">{userDescription}</p>\n                </div>\n                <button className=\"profile__button\" onClick={onAddPlace} aria-label=\"Добавить\" type=\"button\">+</button>\n            </section>\n\n            <section className=\"elements\">\n                {cards.map((item) => (\n                    <Card\n                        key={item._id}\n                        card={item}\n                        onCardClick={onCardClick}\n                     />\n                ))}\n            </section>\n        </main>\n    )\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n      </footer>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <section className={`popup popup_${props.name} ${props.isOpen && \"popup_opened\"}`}>\n      <form className={`popup__form popup__form_${props.name}`} name={props.name} noValidate>\n        <button className=\"popup__close\" type=\"button\" onClick={props.onClose}></button>\n        <h2 className=\"popup__name\">{props.title}</h2>\n        {props.children}\n        <button className={`popup__button popup__button_${props.name}`} type=\"submit\">{props.button}</button>\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup(props) {\n    return (\n        <section className={`popup popup_preview ${props.isOpen && \"popup_opened\"}`}>\n            <figure className=\"popup__figure\">\n                <button className=\"popup__close popup__close_preview\" aria-label=\"Закрыть\" type=\"button\" onClick={props.onClose}></button>\n                <img className=\"popup__image\" src={props.card.link} alt={`${props.card.name}`} />\n                <figcaption className=\"popup__subtitle\">{props.card.name}</figcaption>\n            </figure>\n        </section>\n    )\n}\n\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(true);\n    setIsImagePopupOpen(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n      <Footer />\n\n      <PopupWithForm\n        title=\"Редактировать профиль\"\n        name=\"profile\"\n        button=\"Сохранить\"\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}>\n        <input type=\"text\" value=\"\" placeholder=\"Ваше имя\" className=\"popup__input\" name=\"name\" minlength=\"2\"\n          maxlength=\"40\" id=\"name\" required />\n        <span className=\"popup__error\" id=\"name-error\"></span>\n\n        <input type=\"text\" value=\"\" placeholder=\"Ваше занятие\" className=\"popup__input\" name=\"job\" required minlength=\"2\"\n          maxlength=\"200\" id=\"job\" />\n        <span className=\"popup__error\" id=\"job-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm\n        title=\"Новое место\"\n        name=\"add\"\n        button=\"Создать\"\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}>\n        <input type=\"text\" value=\"\" placeholder=\"Название\" className=\"popup__input\" name=\"placename\" minlength=\"1\"\n          maxlength=\"30\" id=\"placename\" required />\n        <span className=\"popup__error\" id=\"placename-error\"></span>\n\n        <input type=\"url\" value=\"\" placeholder=\"Ссылка на картинку\" className=\"popup__input\" name=\"link\" id=\"link\"\n          required />\n        <span className=\"popup__error\" id=\"link-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm\n        title=\"Обновить аватар\"\n        name=\"avatar\"\n        button=\"Создать\"\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}>\n        <input type=\"url\" className=\"popup__input\" value=\"\" placeholder=\"Ссылка на картинку\" name=\"link\" id=\"link\"\n          required />\n        <span className=\"popup__error\" id=\"link-error\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm\n        title=\"Вы уверены?\"\n        name=\"confirm\"\n        button=\"Да\"\n        onClose={closeAllPopups}\n      />\n\n      <ImagePopup\n        isOpen={selectedCard}\n        card={isImagePopupOpen}\n        onClose={closeAllPopups}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}